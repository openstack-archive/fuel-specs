..
 This work is licensed under a Creative Commons Attribution 3.0 Unported
 License.

 http://creativecommons.org/licenses/by/3.0/legalcode

==========================================
Enable SSL for Fuel API endpoints
==========================================

https://blueprints.launchpad.net/fuel/+spec/fuel-ssl-endpoints

All traffic from/to Fuel is unecrypted.


Problem description
===================

After introduction of access control to Fuel security has been improved
but all credentials and data are transferred using HTTP protocol and
are not protected.

A solution to this problem is to secure all requests by using HTTPS
connection and enable verification of certificate in all components
of Fuel.


Proposed change
===============

Fuel use Nginx as a proxy for services that expose API endpoints. We will
enable SSL connection in Nginx to secure traffic from/to Fuel by default.

For the first iteration of this feature we will use self-signed certificate
that will be generated for each Fuel deployment.
We will also allow users to upload their own certificate on Fuel master
through UI. If there will be not time to implent it, we will just provide
a documentation how to do it manually.

We will need also to adjust fuelclient to work with secure API. The most
important change is to validate certificate - we will use certificate
validation provided in requests library used in fuelclient.

If fuelclient will be used outside of the master node we need to add option
to specify path to the certificate so user could download certificate from
master node and use it to verify connection.
On master node it will not be a problem since that certificate will be
available in the system and for all docker containers that should have
access to it.

It should be also possible to skip certificate check in fuelclient.

In this stage also OSTF will be configured to check certificate.

We will not manage certificate expiration on master node in this iteration.

TBD: How to turn SSL on/off and generate certs.


Alternatives
------------

None


Data model impact
-----------------

None


REST API impact
---------------

All API requests will be encrypted using HTTPS.


Upgrade impact
--------------

Upgrade script will be responsible to generate new self-signed certificate
that will be later used in Fuel. We can allow traffic over HTTP to allow
backward compatibility for upgarade.

During upgrade we will enable SSL by default to improve master node
security.


Security impact
---------------

Using HTTPS for API requests will improve security as all traffic between
the Fuel node and the clients will be encrypted.


Notifications impact
--------------------

After upgrade we need to show user a notification that we enabled SSL on
master node with link to the instructions how to disable it.


Other end user impact
---------------------

As we are using a self-signed certificate by default, if a user is using a
web browser to query Fuel there will be a popup to warn that the certificate
can not be trusted.

If user will use API over HTTPS not using fuelclient he need to disable
certificate validation in used tool or add Fuel certificate as trusted.

Certificate that will be used will be expired after some time so user need to
monitor expiration of the certificate. Certificate will be valid for 10 years
from the moment of creation.


Performance Impact
------------------

Usage of HTTPS may add some latency to the APIs.


Other deployer impact
---------------------

None


Developer impact
----------------

Every component of Fuel that is calling any of the APIs will need to be able
to handle self-signed certificates.

Using a self-signed certificate will affect Selenium tests for UI since
browsers will display a warning about problems with certificate.

API client in system test should skip certificate validation.


Implementation
==============

Assignee(s)
-----------

Primary assignee:
  <launchpad-id or None>

Other contributors:
  <launchpad-id or None>


Work Items
----------

TBD: SSL on/off, cert generation

* Add option to download certificate generated by Fuel.

* Add certificate validation in OSTF.

* Add certificate validation in fuelclient with option to ignore it.

* Add form in UI to allow user use their own certificate (optional).


Dependencies
============

* https://blueprints.launchpad.net/fuel/+spec/refactoring-for-fuelclient


Testing
=======

None


Documentation Impact
====================

It should be described how to work with self-signed certificate:
 * how to add exception to the browser
 * how to add exceptions to other tools (like fuelclient)


References
==========

None
