..
 This work is licensed under a Creative Commons Attribution 3.0 Unported
 License.

 http://creativecommons.org/licenses/by/3.0/legalcode

====================================================
Detect customizations of Fuel packages before update
====================================================

To have an ability effectively plan MOS updates on customer sites we should be
able to see what is custom to cloud relative to GA (or GA + MU) release before
applying a new MU and be sure that update doesn't damage or destroy current
configuration.


-------------------
Problem description
-------------------

Currently we don't have an effective tool to detect customizations of MOS
packages on deployed cloud. So we can get a situation when updating MOS
packages to new versions can be disruptive for customer cloud.


----------------
Proposed changes
----------------

Fuel could include a tool for detection of customization of files in installed
MOS packages. It should work for all the nodes in the cloud. It could compare
version of every MOS package with internal database to detect which package can
be potentially upgraded. It also could detect customizations in files of
packages using internal package manager facilities (dpkg --verify or rpm
--verify).

---------------
Report examples
---------------

No customizatins found::

    Built-in md5 verification analysis: OK

Everything is up to date::

    Potential updates: ALL NODES UP-TO-DATE

Potential updates found::

    - fuel: GA to MU2 (from '8.0.0-1.mos6270' to '8.0.0-1.mos6280')

Custom package found::

    - keystone: installed version '1:2014.1.3-0ubuntu2.1' is not part of MOS 7.0

Customizations found::

    custom [builtin-md5] fuel-dockerctl '8.0.0-1.mos7799' will be overwritten by MU2



Web UI
======

None.


Nailgun
=======

None.


Data model
----------

None.


REST API
--------

None.


Orchestration
=============

None.


RPC Protocol
------------

None.


Fuel Client
===========

Add the following commands to the Fuel CLI::

    fuel -> customtest -> -f|--fake

The Fuel CLI command "customtest" will start verification task on the
Fuel node itself and on all nodes connected to it.

Option "-f|--fake" will generate report only without real verification (source
data will be taken from previous executions).


Plugins
=======

None.


Fuel Library
============

None.


------------
Alternatives
------------

Alternative way is to install timmy-customtest and timmy library which it uses
separately via pip.


--------------
Upgrade impact
--------------

None.


---------------
Security impact
---------------

None.


--------------------
Notifications impact
--------------------

None.


---------------
End user impact
---------------

New feature proposes a convenient tool for MOS upgrade planning and integrity
checking.

------------------
Performance impact
------------------

During the verification phase additional CPU load can be detected due to hash
calculating. Load can be reduced by options in config file.


-----------------
Deployment impact
-----------------

None. This spec affects only post-deployment process.


----------------
Developer impact
----------------

None.


---------------------
Infrastructure impact
---------------------

None.


--------------------
Documentation impact
--------------------

New customization check should be documented in respective section of MOS
documentation.


--------------
Implementation
--------------

Assignee(s)
===========

Primary assignee:

| Anton Samoylov

Other contributors:

| Dmitry Dmitriev

Mandatory design review:

| Vitaly Sedelnik <vsedelnik@mirantis.com>


Work Items
==========

* Refactor existing code [0]
* Build package
* Implement new Fuel CLI option "fuel customtest -f|--fake"


Dependencies
============

None.


-----------
Testing, QA
-----------

None.


Acceptance criteria
===================

Verification report should be generated by Fuel CLI command.


----------
References
----------

.. [0] https://github.com/f3flight/timmy-customtest/
